package Interface;


import Persistence.MSAccessA;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Yesica Daniela Vargas Espitia
 * @author Andres Mauricio Perez Escobar
 */
public class framePrincipalAdm extends javax.swing.JFrame {
    private MSAccessA dataFile;
    
    public framePrincipalAdm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.loadUser();
    }

  
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labAdministrator = new javax.swing.JLabel();
        labUser = new javax.swing.JLabel();
        textUser = new javax.swing.JTextField();
        labPassword = new javax.swing.JLabel();
        butAccept = new javax.swing.JButton();
        butReturn = new javax.swing.JButton();
        labForgot = new javax.swing.JLabel();
        pasPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Principal Administrator");

        labAdministrator.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        labAdministrator.setText("Login");

        labUser.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        labUser.setText("User");

        textUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUserActionPerformed(evt);
            }
        });

        labPassword.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        labPassword.setText("Password");

        butAccept.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        butAccept.setText("Accept");
        butAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAcceptActionPerformed(evt);
            }
        });

        butReturn.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        butReturn.setText("Exit");
        butReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butReturnActionPerformed(evt);
            }
        });

        labForgot.setText("Forgot your password");
        labForgot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labForgotMouseClicked(evt);
            }
        });

        pasPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(butAccept)
                        .addGap(30, 30, 30)
                        .addComponent(butReturn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labUser)
                            .addComponent(labPassword))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labAdministrator)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pasPassword)
                                .addComponent(textUser, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labForgot)
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labUser)
                    .addComponent(textUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(labPassword))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pasPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAccept)
                    .addComponent(butReturn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labForgot)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAcceptActionPerformed
        boolean find = false;
        int userType = 1;
        try {
            if (this.getDataFile().getResultSet() != null) {
                this.getDataFile().getResultSet().beforeFirst();
                while (this.getDataFile().getResultSet().next()) {
                    if (this.getDataFile().getResultSet().getString("username")
                            .equals(textUser.getText())) {
                        if (this.getDataFile().getResultSet().getString("password")
                            .equals(new String(pasPassword.getPassword()))) {
                            userType = this.getDataFile().getResultSet().getInt("type");
                            find = true;
                            break;
                        }
                    }
                }
                if (find) {
                    PrincipalMDI mdiForm = new PrincipalMDI(userType);
                    mdiForm.setVisible(true);
                    this.setVisible(false);
                }
                else {
                    JOptionPane.showMessageDialog(this, "OHH NO", "XD", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(frameUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_butAcceptActionPerformed

    private void butReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butReturnActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_butReturnActionPerformed

    private void labForgotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labForgotMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_labForgotMouseClicked

    private void pasPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pasPasswordActionPerformed

    private void textUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textUserActionPerformed

    public MSAccessA getDataFile() {
        return dataFile;
    }

    public void setDataFile(MSAccessA dataFile) {
        this.dataFile = dataFile;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(framePrincipalAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(framePrincipalAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(framePrincipalAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(framePrincipalAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new framePrincipalAdm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAccept;
    private javax.swing.JButton butReturn;
    private javax.swing.JLabel labAdministrator;
    private javax.swing.JLabel labForgot;
    private javax.swing.JLabel labPassword;
    private javax.swing.JLabel labUser;
    private javax.swing.JPasswordField pasPassword;
    private javax.swing.JTextField textUser;
    // End of variables declaration//GEN-END:variables

    
    private void loadUser() {
        this.setDataFile(new MSAccessA());
        String query = "SELECT username, password, type FROM User";
        if (this.getDataFile().execute(query)) {
            try {
                this.getDataFile().getResultSet().next();
            } catch (SQLException ex) {
                Logger.getLogger(frameUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
